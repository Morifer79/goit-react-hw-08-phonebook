{"version":3,"file":"static/js/134.81e6f3d2.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","redux/contacts/contactSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","redux/contacts/filterSlice.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Thumb = styled.div`\n  position: absolute;\n  top: 160px;\n  left: 32%;\n`;\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 16px;\n`;\n\nexport const FormInput = styled.input`\n  padding: ${p => p.theme.spacing(8)};\n  width: 300px;\n  height: 40px;\n  font-size: 20px;\n  font-weight: 600;\n  background: transparent;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  transition: 0.5s;\n  border-radius: 0px 18px;\n  border: 3px solid #e4ebf5;\n  box-shadow: 1px 1px 2px #c8d0e7, -2px -2px 3px #ffffff,\n    0px 0px 0px inset #ffffff, 0px 0px 0px inset rgba(0, 0, 0, 0.75);\n  position: relative;\n  transition: 0.5s;\n  outline: 0;\n\n  &::after {\n    transition: 0.5s;\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 0px;\n  }\n\n  &:focus-visible {\n    box-shadow: 0px 0px 0px #c8d0e7, 0px 0px 0px #ffffff,\n      -3px -3px 5px inset #ffffff, 3px 3px 5px inset rgba(0, 0, 0, 0.75);\n  }\n\n  &:invalid {\n    border-color: #cf2121;\n  }\n`;\n\nexport const ButtonReg = styled.button`\n  margin: 0 auto 40px;\n  width: 180px;\n  height: 40px;\n  border-radius: 0 18px;\n  background: transparent;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  cursor: pointer;\n  transition: 0.5s;\n\n  &::after {\n    transition: 0.5s;\n    content: '';\n    width: 180px;\n    height: 40px;\n    box-shadow: 1px 1px 2px #c8d0e7, -2px -2px 3px #ffffff,\n      0px 0px 0px inset #ffffff, 0px 0px 0px inset rgba(0, 0, 0, 0.75);\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    border-radius: 0 18px;\n    border: 3px solid #e4ebf5;\n    z-index: 1;\n  }\n  &:hover {\n    box-shadow: 0px 0px 0px #c8d0e7, 0px 0px 0px #ffffff,\n      -3px -3px 5px inset #ffffff, 3px 3px 5px inset rgba(0, 0, 0, 0.75);\n  }\n  &:hover h3 {\n    letter-spacing: 1px;\n  }\n  &:active h3 {\n    transition: 0.1s;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextReg = styled.h3`\n  color: #16093a;\n  transition: 0.5s;\n  pointer-events: none;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n","import styled from 'styled-components';\nimport { ErrorMessage } from 'formik';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  width: 320px;\n`;\n\nexport const InputStyled = styled(Field)`\n  padding: ${p => p.theme.spacing(8)};\n  font-size: 20px;\n  font-weight: 600;\n  width: 300px;\n  height: 40px;\n  background: transparent;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  transition: 0.5s;\n  border-radius: 0px 18px;\n  border: 3px solid #e4ebf5;\n  box-shadow: 1px 1px 2px #c8d0e7, -2px -2px 3px #ffffff,\n    0px 0px 0px inset #ffffff, 0px 0px 0px inset rgba(0, 0, 0, 0.75);\n  position: relative;\n  transition: 0.5s;\n  outline: 0;\n\n  &::after {\n    transition: 0.5s;\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 0px;\n  }\n\n  &:focus-visible {\n    box-shadow: 0px 0px 0px #c8d0e7, 0px 0px 0px #ffffff,\n      -3px -3px 5px inset #ffffff, 3px 3px 5px inset rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: 600;\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ButtonAdd = styled.button`\n  margin: 30px auto 15px;\n  width: 180px;\n  height: 40px;\n  border-radius: 0 18px;\n  background: transparent;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  cursor: pointer;\n  transition: 0.5s;\n\n  &::after {\n    transition: 0.5s;\n    content: '';\n    width: 180px;\n    height: 40px;\n    box-shadow: 1px 1px 2px #c8d0e7, -2px -2px 3px #ffffff,\n      0px 0px 0px inset #ffffff, 0px 0px 0px inset rgba(0, 0, 0, 0.75);\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    border-radius: 0 18px;\n    border: 3px solid #e4ebf5;\n    z-index: 1;\n  }\n  &:hover::after {\n    box-shadow: 0px 0px 0px #c8d0e7, 0px 0px 0px #ffffff,\n      -3px -3px 5px inset #ffffff, 3px 3px 5px inset rgba(0, 0, 0, 0.75);\n  }\n  &:hover h3 {\n    letter-spacing: 1px;\n  }\n  &:active h3 {\n    transition: 0.1s;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #16093a;\n  font-size: 16px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactSelectors';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { TextReg } from 'components/RegisterForm/RegisterForm.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ButtonAdd,\n  ErrMsg,\n  FormStyled,\n  InputStyled,\n  Label,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('The field cannot be left empty!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    ),\n  number: Yup.string()\n    .min(9, 'enter the number in the format XXX-XX-XX')\n    .max(9, 'enter the number in the format XXX-XX-XX')\n    .required('The field cannot be left empty!')\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Phone number must be digits and dashes.'\n    ),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (person, { resetForm }) => {\n    const existName = contacts.some(\n      ({ name }) => name.toLowerCase() === person.name.toLowerCase()\n    );\n\n    const existNumber = contacts.some(({ number }) => number === person.number);\n\n    if (existName) {\n      alert('A contact with this name already in contacts');\n      return;\n    }\n\n    if (existNumber) {\n      alert('A contact with this number already in contacts');\n      return;\n    }\n\n    dispatch(addContact(person));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={SignupSchema}\n    >\n      <FormStyled autoComplete=\"off\">\n        <Label>\n          Name\n          <InputStyled type=\"text\" name=\"name\" required />\n          <ErrMsg name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <InputStyled type=\"tel\" name=\"number\" required />\n          <ErrMsg name=\"number\" component=\"div\" />\n        </Label>\n        <ButtonAdd type=\"submit\">\n          <TextReg>Add contact</TextReg>\n        </ButtonAdd>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  /*margin: 20px 0 0 -60px;*/\n  margin-top: 20px;\n  /*width: 100%;*/\n`;\n\nexport const ContactsListItem = styled.li`\n  /*width: 100%;*/\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\tgap: 10px;\n  pointer-events: none;\n  color: #16093a;\n  font-size: 20px;\n  font-weight: 600;\n  transition: color ${p => p.theme.transition};\n\n  &:hover {\n    color: #cf2121;\n  }\n`;\n\nexport const ButtonDel = styled.button`\n  margin-bottom: ${p => p.theme.spacing(3)};\n\n  font-size: 18px;\n  pointer-events: auto;\n  color: #16093a;\n  width: 130px;\n  height: 35px;\n  border-radius: 0 18px;\n  background: transparent;\n  position: relative;\n  cursor: pointer;\n  transition: 0.5s;\n\n  &::after {\n    transition: 0.5s;\n    content: '';\n    width: 130px;\n    height: 35px;\n    box-shadow: 1px 1px 2px #c8d0e7, -2px -2px 3px #ffffff,\n      0px 0px 0px inset #ffffff, 0px 0px 0px inset rgba(0, 0, 0, 0.75);\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    border-radius: 0 18px;\n    border: 3px solid #e4ebf5;\n    z-index: 1;\n  }\n  &:hover::after {\n    box-shadow: 0px 0px 0px #c8d0e7, 0px 0px 0px #ffffff,\n      -3px -3px 5px inset #ffffff, 3px 3px 5px inset rgba(0, 0, 0, 0.75);\n  }\n\n  &:hover h3 {\n    color: #cf2121;\n    letter-spacing: 1px;\n  }\n  &:active h3 {\n    transition: 0.1s;\n    letter-spacing: 2px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactOperations';\nimport { TextReg } from 'components/RegisterForm/RegisterForm.styled';\nimport {\n  ContactsList,\n  ContactsListItem,\n  ButtonDel,\n} from './ContactList.styled';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/contactSelectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filterContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterContacts || filterContacts === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContacts)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  //useEffect(() => {\n  //  dispatch(fetchContacts());\n  //}, [dispatch]);\n\n  return (\n    <ContactsList>\n      {visibilityContacts.map(({ id, name, number }) => (\n        <ContactsListItem key={id}>\n          {name}: {number}\n          <ButtonDel type=\"button\" id={id} onClick={handleDelete}>\n            <TextReg>Delete</TextReg>\n          </ButtonDel>\n        </ContactsListItem>\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  padding: ${p => p.theme.spacing(8)};\n  margin: 0 auto 0 70px;\n  font-size: 20px;\n  font-weight: 600;\n  width: 180px;\n  height: 40px;\n  background: transparent;\n  display: flex;\n  align-items: center;\n  transition: 0.5s;\n  border-radius: 0px 18px;\n  border: 3px solid #e4ebf5;\n  box-shadow: 1px 1px 2px #c8d0e7, -2px -2px 3px #ffffff,\n    0px 0px 0px inset #ffffff, 0px 0px 0px inset rgba(0, 0, 0, 0.75);\n  transition: 0.5s;\n  outline: 0;\n\n  &::after {\n    transition: 0.5s;\n    content: '';\n  }\n\n  &:focus-visible {\n    box-shadow: 0px 0px 0px #c8d0e7, 0px 0px 0px #ffffff,\n      -3px -3px 5px inset #ffffff, 3px 3px 5px inset rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const SearchLabelText = styled.h2`\n  color: #cf2121;\n  font-size: 18px;\n  margin-left: 70px;\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterInitialState = '';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: filterInitialState,\n  reducers: {\n    applyFilter(_, { payload }) {\n      return payload;\n    },\n  },\n});\n\nexport const { applyFilter } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","import { useDispatch } from 'react-redux';\nimport { SearchInput, SearchLabelText } from './Filter.styled';\nimport { applyFilter } from 'redux/contacts/filterSlice';\nimport { nanoid } from 'nanoid';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <SearchLabelText>Find contacts by name:</SearchLabelText>\n      <SearchInput\n        type=\"text\"\n        id={nanoid()}\n        onChange={e => dispatch(applyFilter(e.target.value))}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const ThumbContact = styled.div`\n  position: absolute;\n  top: 100px;\n  left: 32%;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectError, selectLoading } from 'redux/contacts/contactSelectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader';\nimport { Container, ThumbContact } from './Contacts.styled';\nimport clean_scroll from '../../images/clean_scroll.png';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <img src={clean_scroll} alt=\"scroll\" />\n        <ThumbContact>\n          <ContactForm />\n          <Filter />\n          {isLoading && !isError && <Loader />}\n          <ContactList />\n        </ThumbContact>\n      </Container>\n    </>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Thumb","_templateObject2","Form","_templateObject3","FormLabel","_templateObject4","FormInput","_templateObject5","p","theme","spacing","ButtonReg","_templateObject6","TextReg","_templateObject7","selectContacts","state","contacts","selectError","error","selectLoading","loading","selectFilteredContacts","createSelector","filter","_ref","name","toLowerCase","includes","FormStyled","InputStyled","Field","Label","ButtonAdd","ErrMsg","ErrorMessage","SignupSchema","Yup","shape","min","max","required","matches","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","person","resetForm","existName","some","_ref2","existNumber","_ref3","alert","addContact","validationSchema","children","_jsxs","autoComplete","type","component","ContactsList","ContactsListItem","transition","ButtonDel","ContactList","filterContacts","handleDelete","e","deleteContact","currentTarget","id","visibilityContacts","contact","map","onClick","SearchInput","SearchLabelText","filterSlice","createSlice","initialState","reducers","applyFilter","_","payload","actions","reducer","Filter","_Fragment","nanoid","onChange","target","value","Container","ThumbContact","Contacts","isLoading","isError","useEffect","fetchContacts","src","clean_scroll","alt","Loader"],"sourceRoot":""}